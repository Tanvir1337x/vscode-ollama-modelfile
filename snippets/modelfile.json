{
  "From Statement": {
    "prefix": "from",
    "body": ["FROM $1"],
    "description": "Defines the base model to use."
  },
  "Adapter Statement": {
    "prefix": "adapter",
    "body": ["ADAPTER $1"],
    "description": "Defines the (Q)LoRA adapters to apply to the model."
  },
  "Template Block": {
    "prefix": "template",
    "body": ["TEMPLATE \"\"\"$1\"\"\""],
    "description": "The full prompt template to be sent to the model."
  },
  "System Block": {
    "prefix": "system",
    "body": ["SYSTEM \"\"\"$1\"\"\""],
    "description": "Specifies the system message that will be set in the template."
  },
  "License Block": {
    "prefix": "license",
    "body": ["LICENSE \"\"\"$1\"\"\""],
    "description": "Specifies the legal license."
  },
  "Parameter": {
    "prefix": "param",
    "body": ["PARAMETER $1 $2"],
    "description": "Sets the parameters for how Ollama will run the model."
  },
  "Message": {
    "prefix": "message",
    "body": ["MESSAGE $1 $2"],
    "description": "Specify message history."
  },
  "Template ChatML": {
    "description": "Specify ChatML Template",
    "prefix": ["template chatml"],
    "body": [
      "TEMPLATE \"\"\" {{ if .System }}<|im_start|>system",
      "{{ .System }}<|im_end|>",
      "{{ end }}",
      "{{ if .Prompt }}<|im_start|>user",
      "{{ .Prompt }}<|im_end|>",
      "{{ end }}",
      "<|im_start|>assistant",
      "\"\"\"",
      "",
      "# Common ChatML Stop Tokens, Set these as per your models requirements",
      "PARAMETER stop \"<|system|>\"",
      "PARAMETER stop \"<|user|>\"",
      "PARAMETER stop \"<|assistant|>\"",
      "PARAMETER stop \"</s>\"",
      "PARAMETER stop \"<|endoftext|>\"",
      "PARAMETER stop \"<|im_start|>\"",
      "PARAMETER stop \"<|im_end|>\"",
      "PARAMETER stop \"<|im_done|>\"",
      "PARAMETER stop \"<|eot_id|>\""
    ]
  },
  "Template Llama3": {
    "description": "Specify Llama3 Template",
    "prefix": ["template llama3"],
    "body": [
      "TEMPLATE \"\"\"{{ if .System }}<|start_header_id|>system<|end_header_id|>",
      "",
      "{{ .System }}<|eot_id|>{{ end }}{{ if .Prompt }}<|start_header_id|>user<|end_header_id|>",
      "",
      "{{ .Prompt }}<|eot_id|>{{ end }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ .Response }}<|eot_id|>",
      "\"\"\"",
      "",
      "PARAMETER stop \"<|start_header_id|>\"",
      "PARAMETER stop \"<|end_header_id|>\"",
      "PARAMETER stop \"<|eot_id|>\""
    ]
  },
  "Template Phi3": {
    "description": "Specify Phi3 Template",
    "prefix": ["template phi3"],
    "body": [
      "TEMPLATE \"\"\"{{ if .System }}<|system|>",
      "{{ .System }}<|end|>",
      "{{ end }}{{ if .Prompt }}<|user|>",
      "{{ .Prompt }}<|end|>",
      "{{ end }}<|assistant|>",
      "{{ .Response }}<|end|>",
      "\"\"\"",
      "",
      "PARAMETER stop \"<|user|>\"",
      "PARAMETER stop \"<|assistant|>\"",
      "PARAMETER stop \"<|system|>\"",
      "PARAMETER stop \"<|end|>\"",
      "PARAMETER stop \"<|endoftext|>\""
    ]
  },
  "Template Gemma": {
    "description": "Specify Gemma Template",
    "prefix": ["template gemma"],
    "body": [
      "<start_of_turn>user",
      "{{ if .System }}{{ .System }} {{ end }}{{ .Prompt }}<end_of_turn>",
      "<start_of_turn>model",
      "{{ .Response }}<end_of_turn>",
      "",
      "PARAMETER stop \"<start_of_turn>\"",
      "PARAMETER stop \"<end_of_turn>\"",
      "PARAMETER penalize_newline \"false\"",
      "PARAMETER repeat_penalty \"1\""
    ]
  },
  "Template Gemma2": {
    "description": "Specify Gemma2 Template",
    "prefix": ["template gemma2"],
    "body": [
      "<start_of_turn>user",
      "{{ if .System }}{{ .System }} {{ end }}{{ .Prompt }}<end_of_turn>",
      "<start_of_turn>model",
      "{{ .Response }}<end_of_turn>",
      "",
      "PARAMETER stop \"<start_of_turn>\"",
      "PARAMETER stop \"<end_of_turn>\""
    ]
  },
  "Template Mistral-Nemo": {
    "description": "Specify Mistral-Nemo Template",
    "prefix": ["template mistral-nemo"],
    "body": [
      "{{- range $i, $_ := .Messages }}",
      "{{- if eq .Role \"user\" }}",
      "{{- if and $.Tools (le (len (slice $.Messages $i)) 2) }}[AVAILABLE_TOOLS] {{ $.Tools }}[/AVAILABLE_TOOLS]",
      "{{- end }}[INST] {{ if and $.System (eq (len (slice $.Messages $i)) 1) }}{{ $.System }}",
      "{{ end }}{{ .Content }}[/INST]",
      "{{- else if eq .Role \"assistant\" }}",
      "{{- if .Content }} {{ .Content }}{{ if not (eq (len (slice $.Messages $i)) 1) }}</s>{{ end }}",
      "{{- else if .ToolCalls }}[TOOL_CALLS] [",
      "{{- range .ToolCalls }}{\"name\": \"{{ .Function.Name }}\", \"arguments\": {{ .Function.Arguments }}",
      "{{- end }}]",
      "{{- end }}",
      "{{- else if eq .Role \"tool\" }}[TOOL_RESULTS] {\"content\": {{ .Content }}} [/TOOL_RESULTS]",
      "{{- end }}",
      "{{- end }}",
      "",
      "PARAMETER stop \"[INST]\"",
      "PARAMETER stop \"[/INST]\""
    ]
  }
}
