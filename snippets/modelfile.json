{
  "From Statement": {
    "prefix": "from",
    "body": ["FROM $1"],
    "description": "Defines the base model to use."
  },
  "Adapter Statement": {
    "prefix": "adapter",
    "body": ["ADAPTER $1"],
    "description": "Defines the (Q)LoRA adapters to apply to the model."
  },
  "Template Block": {
    "prefix": "template",
    "body": ["TEMPLATE \"\"\"$1\"\"\""],
    "description": "The full prompt template to be sent to the model."
  },
  "System Block": {
    "prefix": "system",
    "body": ["SYSTEM \"\"\"$1\"\"\""],
    "description": "Specifies the system message that will be set in the template."
  },
  "License Block": {
    "prefix": "license",
    "body": ["LICENSE \"\"\"$1\"\"\""],
    "description": "Specifies the legal license."
  },
  "Parameter": {
    "prefix": "param",
    "body": ["PARAMETER $1 $2"],
    "description": "Sets the parameters for how Ollama will run the model."
  },
  "Message": {
    "prefix": "message",
    "body": ["MESSAGE $1 $2"],
    "description": "Specify message history."
  },
  "Template ChatML": {
    "description": "Specify ChatML Template",
    "prefix": ["template chatml"],
    "body": [
      "TEMPLATE \"\"\" {{ if .System }}<|im_start|>system",
      "{{ .System }}<|im_end|>",
      "{{ end }}",
      "{{ if .Prompt }}<|im_start|>user",
      "{{ .Prompt }}<|im_end|>",
      "{{ end }}",
      "<|im_start|>assistant",
      "\"\"\"",
      "",
      "# Common ChatML Stop Tokens, Set these as per your models requirements",
      "PARAMETER stop \"<|system|>\"",
      "PARAMETER stop \"<|user|>\"",
      "PARAMETER stop \"<|assistant|>\"",
      "PARAMETER stop \"</s>\"",
      "PARAMETER stop \"<|endoftext|>\"",
      "PARAMETER stop \"<|im_start|>\"",
      "PARAMETER stop \"<|im_end|>\"",
      "PARAMETER stop \"<|im_done|>\"",
      "PARAMETER stop \"<|eot_id|>\""
    ]
  },
  "Template Llama2": {
    "description": "Specify Llama2 Template",
    "prefix": ["template llama2"],
    "body": [
      "[INST] <<SYS>>{{ .System }}<</SYS>>",
      "",
      "{{ .Prompt }} [/INST]",
      "",
      "PARAMETER stop \"[INST]\"",
      "PARAMETER stop \"[/INST]\"",
      "PARAMETER stop \"<<SYS>>\"",
      "PARAMETER stop \"<</SYS>>\""
    ]
  },
  "Template Llama3": {
    "description": "Specify Llama3 Template",
    "prefix": ["template llama3"],
    "body": [
      "TEMPLATE \"\"\"{{ if .System }}<|start_header_id|>system<|end_header_id|>",
      "",
      "{{ .System }}<|eot_id|>{{ end }}{{ if .Prompt }}<|start_header_id|>user<|end_header_id|>",
      "",
      "{{ .Prompt }}<|eot_id|>{{ end }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ .Response }}<|eot_id|>",
      "\"\"\"",
      "",
      "PARAMETER stop \"<|start_header_id|>\"",
      "PARAMETER stop \"<|end_header_id|>\"",
      "PARAMETER stop \"<|eot_id|>\""
    ]
  },
  "Template Llama3.1": {
    "description": "Specify Llama3.1 Template",
    "prefix": ["template llama3.1"],
    "body": [
      "{{ if .Messages }}",
      "{{- if or .System .Tools }}<|start_header_id|>system<|end_header_id|>",
      "{{- if .System }}",
      "",
      "{{ .System }}",
      "{{- end }}",
      "{{- if .Tools }}",
      "",
      "You are a helpful assistant with tool calling capabilities. When you receive a tool call response, use the output to format an answer to the orginal use question.",
      "{{- end }}",
      "{{- end }}<|eot_id|>",
      "{{- range $i, $_ := .Messages }}",
      "{{- $last := eq (len (slice $.Messages $i)) 1 }}",
      "{{- if eq .Role \"user\" }}<|start_header_id|>user<|end_header_id|>",
      "{{- if and $.Tools $last }}",
      "",
      "Given the following functions, please respond with a JSON for a function call with its proper arguments that best answers the given prompt.",
      "",
      "Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}. Do not use variables.",
      "",
      "{{ $.Tools }}",
      "{{- end }}",
      "",
      "{{ .Content }}<|eot_id|>{{ if $last }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ end }}",
      "{{- else if eq .Role \"assistant\" }}<|start_header_id|>assistant<|end_header_id|>",
      "{{- if .ToolCalls }}",
      "",
      "{{- range .ToolCalls }}{\"name\": \"{{ .Function.Name }}\", \"parameters\": {{ .Function.Arguments }}}{{ end }}",
      "{{- else }}",
      "",
      "{{ .Content }}{{ if not $last }}<|eot_id|>{{ end }}",
      "{{- end }}",
      "{{- else if eq .Role \"tool\" }}<|start_header_id|>ipython<|end_header_id|>",
      "",
      "{{ .Content }}<|eot_id|>{{ if $last }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ end }}",
      "{{- end }}",
      "{{- end }}",
      "{{- else }}",
      "{{- if .System }}<|start_header_id|>system<|end_header_id|>",
      "",
      "{{ .System }}<|eot_id|>{{ end }}{{ if .Prompt }}<|start_header_id|>user<|end_header_id|>",
      "",
      "{{ .Prompt }}<|eot_id|>{{ end }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ end }}{{ .Response }}{{ if .Response }}<|eot_id|>{{ end }}"
    ]
  },
  "Template Llama3.2": {
    "description": "Specify Llama3.2 Template",
    "prefix": ["template llama3.2"],
    "body": [
      "<|start_header_id|>system<|end_header_id|>",
      "",
      "Cutting Knowledge Date: December 2023",
      "",
      "{{ if .System }}{{ .System }}",
      "{{- end }}",
      "{{- if .Tools }}When you receive a tool call response, use the output to format an answer to the orginal user question.",
      "",
      "You are a helpful assistant with tool calling capabilities.",
      "{{- end }}<|eot_id|>",
      "{{- range $i, $_ := .Messages }}",
      "{{- $last := eq (len (slice $.Messages $i)) 1 }}",
      "{{- if eq .Role \"user\" }}<|start_header_id|>user<|end_header_id|>",
      "{{- if and $.Tools $last }}",
      "",
      "Given the following functions, please respond with a JSON for a function call with its proper arguments that best answers the given prompt.",
      "",
      "Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}. Do not use variables.",
      "",
      "{{ range $.Tools }}",
      "{{- . }}",
      "{{ end }}",
      "{{ .Content }}<|eot_id|>",
      "{{- else }}",
      "",
      "{{ .Content }}<|eot_id|>",
      "{{- end }}{{ if $last }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ end }}",
      "{{- else if eq .Role \"assistant\" }}<|start_header_id|>assistant<|end_header_id|>",
      "{{- if .ToolCalls }}",
      "{{ range .ToolCalls }}",
      "{\"name\": \"{{ .Function.Name }}\", \"parameters\": {{ .Function.Arguments }}}{{ end }}",
      "{{- else }}",
      "",
      "{{ .Content }}",
      "{{- end }}{{ if not $last }}<|eot_id|>{{ end }}",
      "{{- else if eq .Role \"tool\" }}<|start_header_id|>ipython<|end_header_id|>",
      "",
      "{{ .Content }}<|eot_id|>{{ if $last }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ end }}",
      "{{- end }}",
      "{{- end }}",
      "",
      "PARAMETER stop \"<|start_header_id|>\"",
      "PARAMETER stop \"<|end_header_id|>\"",
      "PARAMETER stop \"<|eot_id|>\""
    ]
  },
  "Template Llama3.2 Vision": {
    "description": "Specify Llama3.2 Vision Template",
    "prefix": ["template llama3.2 vision"],
    "body": [
      "{{- range $index, $_ := .Messages }}<|start_header_id|>{{ .Role }}<|end_header_id|>",
      "",
      "{{ .Content }}",
      "{{- if gt (len (slice $.Messages $index)) 1 }}<|eot_id|>",
      "{{- else if ne .Role \"assistant\" }}<|eot_id|><|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ end }}",
      "{{- end }}"
    ]
  },
  "Template Phi2": {
    "description": "Specify Phi2 Template",
    "prefix": ["template phi2"],
    "body": [
      "{{ if .System }}System: {{ .System }}{{ end }}",
      "User: {{ .Prompt }}",
      "Assistant:",
      "",
      "PARAMETER stop \"User:\"",
      "PARAMETER stop \"Assistant:\"",
      "PARAMETER stop \"System:\""
    ]
  },
  "Template Phi3": {
    "description": "Specify Phi3 Template",
    "prefix": ["template phi3"],
    "body": [
      "TEMPLATE \"\"\"{{ if .System }}<|system|>",
      "{{ .System }}<|end|>",
      "{{ end }}{{ if .Prompt }}<|user|>",
      "{{ .Prompt }}<|end|>",
      "{{ end }}<|assistant|>",
      "{{ .Response }}<|end|>",
      "\"\"\"",
      "",
      "PARAMETER stop \"<|user|>\"",
      "PARAMETER stop \"<|assistant|>\"",
      "PARAMETER stop \"<|system|>\"",
      "PARAMETER stop \"<|end|>\"",
      "PARAMETER stop \"<|endoftext|>\""
    ]
  },
  "Template Gemma": {
    "description": "Specify Gemma Template",
    "prefix": ["template gemma"],
    "body": [
      "<start_of_turn>user",
      "{{ if .System }}{{ .System }} {{ end }}{{ .Prompt }}<end_of_turn>",
      "<start_of_turn>model",
      "{{ .Response }}<end_of_turn>",
      "",
      "PARAMETER stop \"<start_of_turn>\"",
      "PARAMETER stop \"<end_of_turn>\"",
      "PARAMETER penalize_newline \"false\"",
      "PARAMETER repeat_penalty \"1\""
    ]
  },
  "Template Gemma2": {
    "description": "Specify Gemma2 Template",
    "prefix": ["template gemma2"],
    "body": [
      "<start_of_turn>user",
      "{{ if .System }}{{ .System }} {{ end }}{{ .Prompt }}<end_of_turn>",
      "<start_of_turn>model",
      "{{ .Response }}<end_of_turn>",
      "",
      "PARAMETER stop \"<start_of_turn>\"",
      "PARAMETER stop \"<end_of_turn>\""
    ]
  },
  "Template Mistral-Nemo": {
    "description": "Specify Mistral-Nemo Template",
    "prefix": ["template mistral-nemo"],
    "body": [
      "{{- range $i, $_ := .Messages }}",
      "{{- if eq .Role \"user\" }}",
      "{{- if and $.Tools (le (len (slice $.Messages $i)) 2) }}[AVAILABLE_TOOLS] {{ $.Tools }}[/AVAILABLE_TOOLS]",
      "{{- end }}[INST] {{ if and $.System (eq (len (slice $.Messages $i)) 1) }}{{ $.System }}",
      "{{ end }}{{ .Content }}[/INST]",
      "{{- else if eq .Role \"assistant\" }}",
      "{{- if .Content }} {{ .Content }}{{ if not (eq (len (slice $.Messages $i)) 1) }}</s>{{ end }}",
      "{{- else if .ToolCalls }}[TOOL_CALLS] [",
      "{{- range .ToolCalls }}{\"name\": \"{{ .Function.Name }}\", \"arguments\": {{ .Function.Arguments }}",
      "{{- end }}]",
      "{{- end }}",
      "{{- else if eq .Role \"tool\" }}[TOOL_RESULTS] {\"content\": {{ .Content }}} [/TOOL_RESULTS]",
      "{{- end }}",
      "{{- end }}",
      "",
      "PARAMETER stop \"[INST]\"",
      "PARAMETER stop \"[/INST]\""
    ]
  },
  "Template Mixtral": {
    "description": "Specify Mixtral Template",
    "prefix": ["template mixtral"],
    "body": [
      "[INST] {{ if .System }}{{ .System }} {{ end }}{{ .Prompt }} [/INST]",
      "",
      "PARAMETER stop \"[INST]\"",
      "PARAMETER stop \"[/INST]\""
    ]
  },
  "Template Codegemma": {
    "description": "Specify Codegemma Template",
    "prefix": ["template codegemma"],
    "body": [
      "<start_of_turn>user",
      "{{ if .System }}{{ .System }} {{ end }}{{ .Prompt }}<end_of_turn>",
      "<start_of_turn>model",
      "{{ .Response }}<end_of_turn>",
      "",
      "PARAMETER penalize_newline false",
      "PARAMETER repeat_penalty 1",
      "PARAMETER stop \"<start_of_turn>\"",
      "PARAMETER stop \"<end_of_turn>\""
    ]
  },
  "Template Mistral 0.1": {
    "description": "Specify Mistral 0.1 Template",
    "prefix": ["template mistral-0.1"],
    "body": [
      "[INST] {{ .System }} {{ .Prompt }} [/INST]",
      "",
      "PARAMETER stop \"[INST]\"",
      "PARAMETER stop \"[/INST]\""
    ]
  },
  "Template Mistral 0.2": {
    "description": "Specify Mistral 0.2 Template",
    "prefix": ["template mistral-0.2"],
    "body": [
      "[INST] {{ .System }} {{ .Prompt }} [/INST]",
      "",
      "PARAMETER stop \"[INST]\"",
      "PARAMETER stop \"[/INST]\""
    ]
  },
  "Template Mistral 0.3": {
    "description": "Specify Mistral 0.3 Template",
    "prefix": ["template mistral-0.3"],
    "body": [
      "{{- if .Messages }}",
      "{{- range $index, $_ := .Messages }}",
      "{{- if eq .Role \"user\" }}",
      "{{- if and (eq (len (slice $.Messages $index)) 1) $.Tools }}[AVAILABLE_TOOLS] {{ $.Tools }}[/AVAILABLE_TOOLS]",
      "{{- end }}[INST] {{ if and $.System (eq (len (slice $.Messages $index)) 1) }}{{ $.System }}",
      "",
      "{{ end }}{{ .Content }}[/INST]",
      "{{- else if eq .Role \"assistant\" }}",
      "{{- if .Content }} {{ .Content }}",
      "{{- else if .ToolCalls }}[TOOL_CALLS] [",
      "{{- range .ToolCalls }}{\"name\": \"{{ .Function.Name }}\", \"arguments\": {{ .Function.Arguments }}}",
      "{{- end }}]",
      "{{- end }}</s>",
      "{{- else if eq .Role \"tool\" }}[TOOL_RESULTS] {\"content\": {{ .Content }}} [/TOOL_RESULTS]",
      "{{- end }}",
      "{{- end }}",
      "{{- else }}[INST] {{ if .System }}{{ .System }}",
      "",
      "{{ end }}{{ .Prompt }}[/INST]",
      "{{- end }} {{ .Response }}",
      "{{- if .Response }}</s>",
      "{{- end }}",
      "",
      "PARAMETER stop \"[INST]\"",
      "PARAMETER stop \"[/INST]\""
    ]
  },
  "Template Command-R": {
    "description": "Specify Command-R Template",
    "prefix": ["template command-r"],
    "body": [
      "{{ if .System }}<|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>{{ .System }}<|END_OF_TURN_TOKEN|>{{ end }}{{ if .Prompt }}<|START_OF_TURN_TOKEN|><|USER_TOKEN|>{{ .Prompt }}<|END_OF_TURN_TOKEN|}}{{ end }}<|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>{{ .Response }}<|END_OF_TURN_TOKEN|>",
      "",
      "PARAMETER stop \"<|START_OF_TURN_TOKEN|>\"",
      "PARAMETER stop \"<|END_OF_TURN_TOKEN|>\""
    ]
  },
  "Template Command-R-Plus": {
    "description": "Specify Command-R-Plus Template",
    "prefix": ["template command-r-plus"],
    "body": [
      "{{- if or .Tools .System }}<|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>",
      "{{- if .Tools }}# Safety Preamble",
      "The instructions in this section override those in the task description and style guide sections. Don't answer questions that are harmful or immoral.",
      "",
      "# System Preamble",
      "## Basic Rules",
      "You are a powerful conversational AI trained by Cohere to help people. You are augmented by a number of tools, and your job is to use and consume the output of these tools to best help the user. You will see a conversation history between yourself and a user, ending with an utterance from the user. You will then see a specific instruction instructing you what kind of response to generate. When you answer the user's requests, you cite your sources in your answers, according to those instructions.",
      "",
      "{{ if .System }}# User Preamble",
      "{{ .System }}",
      "{{- end }}",
      "",
      "## Available Tools",
      "Here is a list of tools that you have available to you:",
      "{{- range .Tools }}",
      "",
      "```python",
      "def {{ .Function.Name }}(",
      "{{- range $name, $property := .Function.Parameters.Properties }}{{ $name }}: {{ $property.Type }}, {{ end }}) -> List[Dict]:",
      "    '''{{ .Function.Description }}",
      "",
      "{{- if .Function.Parameters.Properties }}",
      "",
      "    Args:",
      "{{- range $name, $property := .Function.Parameters.Properties }}",
      "        {{ $name }} ({{ $property.Type }}): {{ $property.Description }}",
      "{{- end }}",
      "{{- end }}",
      "    '''",
      "    pass",
      "```",
      "{{- end }}",
      "{{- else if .System }}{{ .System }}",
      "{{- end }}<|END_OF_TURN_TOKEN|>",
      "{{- end }}",
      "{{- range .Messages }}",
      "{{- if eq .Role \"system\" }}",
      "{{- continue }}",
      "{{- end }}<|START_OF_TURN_TOKEN|>",
      "{{- if eq .Role \"user\" }}<|USER_TOKEN|>{{ .Content }}",
      "{{- else if eq .Role \"assistant\" }}<|CHATBOT_TOKEN|>",
      "{{- if .Content }}{{ .Content }}",
      "{{- else if .ToolCalls }}",
      "Action: ```json",
      "[",
      "{{- range .ToolCalls }}",
      "    {",
      "        \"tool_name\": \"{{ .Function.Name }}\",",
      "        \"parameters\": {{ .Function.Arguments }}",
      "    }",
      "{{- end }}",
      "]```",
      "{{ continue }}",
      "{{ end }}",
      "{{- else if eq .Role \"tool\" }}<|SYSTEM_TOKEN|><results>",
      "{{ .Content }}</results>",
      "{{- end }}<|END_OF_TURN_TOKEN|>",
      "{{- end }}",
      "{{- if .Tools }}<|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>Write 'Action:' followed by a json-formatted list of actions that you want to perform in order to produce a good response to the user's last input. You can use any of the supplied tools any number of times, but you should aim to execute the minimum number of necessary actions for the input. You should use the `directly-answer` tool if calling the other tools is unnecessary. The list of actions you want to call should be formatted as a list of json objects, for example:",
      "```json",
      "[",
      "    {",
      "        \"tool_name\": title of the tool in the specification,",
      "        \"parameters\": a dict of parameters to input into the tool as they are defined in the specs, or {} if it takes no parameters",
      "    }",
      "]```",
      "{{- end }}<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>",
      "",
      "PARAMETER stop \"<|START_OF_TURN_TOKEN|>\"",
      "PARAMETER stop \"<|END_OF_TURN_TOKEN|>\""
    ]
  },
  "Template Nemotron": {
    "description": "Specify Nemotron Template",
    "prefix": ["template nemotron"],
    "body": [
      "<|start_header_id|>system<|end_header_id|>",
      "",
      "{{ if .Tools }}You have access to the following functions. To call a function, please respond with JSON for a function call. Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}. Do not use variables.",
      "",
      "{{ range .Tools }}{{ . }}",
      "",
      "{{ end }}",
      "{{- end }}{{ .System }}<|eot_id|>",
      "{{- range $i, $_ := .Messages }}",
      "{{- $isLastMessage := eq (len (slice $.Messages $i)) 1 -}}",
      "{{- if eq .Role \"system\" }}",
      "{{- else if eq .Role \"assistant\" }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ if .Content }}{{ .Content }}",
      "{{- else if .ToolCalls }}",
      "{{- range .ToolCalls }}{\"name\": \"{{ .Function.Name }}\", \"parameters\": {{ .Function.Arguments }} }",
      "{{- end }}",
      "{{- end }}",
      "{{- if not $isLastMessage }}<|eot_id|>",
      "{{- end }}",
      "{{- else if eq .Role \"tool\" }}<|start_header_id|>ipython<|end_header_id|>",
      "",
      "{{ .Content }}<|eot_id|>",
      "{{- if $isLastMessage }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ end }}",
      "{{- else }}<|start_header_id|>{{ .Role }}<|end_header_id|>",
      "",
      "{{ .Content }}<|eot_id|>",
      "{{- if $isLastMessage }}<|start_header_id|>assistant<|end_header_id|>",
      "",
      "{{ end }}",
      "{{- end }}",
      "{{- end }}",
      "",
      "PARAMETER stop \"<|start_header_id|>\"",
      "PARAMETER stop \"<|end_header_id|>\"",
      "PARAMETER stop \"<|eot_id|>\""
    ]
  }
}
